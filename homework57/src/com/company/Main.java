package com.company;

public class Main {

    public static int number = 10;

    public static void main(String[] args) {
        Thread multiplyByTwo = new Thread(new MultiplyThread());
        multiplyByTwo.start();
        Thread addTwo = new Thread(new AddThread());
        addTwo.start();
        Thread divideByTwo = new Thread(new DivideThread());
        divideByTwo.start();
        Thread subtractTwo = new Thread(new SubtractThread());
        subtractTwo.start();

        //Запустить потоки, сделать так, чтобы все потоки конкурировали за одну переменную.
        // Посмотреть, что получится в итоге, и ответить на вопрос, можем ли мы гарантировать, что ответ всегда будет одинаковым?
        //Гарантировать что ответ будет всегда одинаковым мы не можем.
        // каждый раз при компиляции первым отрабатывал MultiplyThread() остальные менялись в порядке.

        //Задача B Вопросы

        //Что для вас поток?
        // поток - различные направления которые могут компилиться не зависимо от main потока. точнее не ждать пока завершится в
        // выполнение main потока.
        //Как вы понимаете многопоточное программирование?
        // выполнение различных задач одновременно. например проигрывание музыки и ход самой игры в играх, или значок загрузки
        // (вращающийся кружок, или точки или процент загрузки XD)во время
        // загрузки какого либо окна в приложении, или
        //Для чего по-вашему нам нужны потоки?
        // для выполнения различных задач одновременно
        //Представьте себе, что люди работают параллельно над одной задачей, какие проблемы могут всплыть из-за этого?
        //  затрудняюсь ответить
        //Что такое synchronized?
        // синхронизация потоков, чтоб все не лезли без очереди как в гос больницах, а ждали свою очередь.
        //т.е чтоб пока выполняется один поток второй не начинал выполнение, а ждал очередь в THREAD POOl

    }
}
