Ответьте на вопросы своими словами:

1. Как вы понимаете Error? RuntimeException? CheckedException?
    Error, RuntimeException, CheckedException являются исключительными ситуациями в java. Все они реализуют класс Throwable.
    Класс throwable наследуется 2 подклассами Error и Exceptions. Exceptions в свою очередь могут быть Checked Exceptions и Runtime Exceptions
    Все исключения делятся на Checked и Unchecked Exceptions.Checked Exceptions происходят в ожидаемых местах,
    поэтому их нужно заранее вылавливать и обязательно обрабатывать чтоб программа не прекращала работать.
    Unchecked exceptions в основном происходят по причине программиста, возникают при выполнении программы в неожиданных местах,
    могут быть отловлены и обработаны. Error и RuntimeExceptions  являются Unchecked Exceptions. Error возникают в основном в самом LVM
    они не отлавливаются и не могут быть обработаны. также могут выбрасываться программистами. наиболее известны Errors это
    StackOverflowError and OutOfMemoryError. RuntimeExceptions должны быть отловлены и обработаны (try-catch). примеры RuntimeExceptions:
    IndexOutOFBoundException, IllegalArgumentException, FileNotFoundException.

2. Для чего применяется throw?
    Throw происывается в методе, и говорит о том что метод может вызывать Исключение которое нужно обаботать.

3. Разница между Unchecked Exceptions & Checked Exceptions? (Прям совсем своими словами!)
    Checked Exceptions происходят в ожидаемых местах,
    поэтому их нужно заранее вылавливать и обязательно обрабатывать чтоб программа не прекращала работать.
    Unchecked exceptions в основном происходят по причине программиста, возникают при выполнении программы в неожиданных местах,
    могут быть отловлены и обработаны.

4. Как вы понимаете блоки try {} catch {} finally {}?
    В блоке try {
        пишется код который может вызывать ошибку.
    }В блоке catch(пишется Exception который нужно отловить){
        прописывается логика обработки этого Exception
    } В блоке finally{
        пишется код который в любом случае должен быть воспоизведен
    }
5. Почему при множественном catch, сначала используем более детальные Exceptions, и только потом переходим к родителям?
    Чтобы сначала обработались детальные Исключения которые мы указали, а потом родительские.
    иначе детальные исключения не будут отображаться, отоброзится первое рродительское исключение, которое было обработано.